name: impi

on:
  workflow_call:
    inputs:
      mpi4py-git:
        description: 'mpi4py git'
        default:  mpi4py/mpi4py
        required: false
        type: string
      mpi4py-ref:
        description: 'mpi4py ref'
        default:  ''
        required: false
        type: string
  workflow_dispatch:
    inputs:
      mpi4py-git:
        description: 'mpi4py git'
        default:  mpi4py/mpi4py
        required: false
        type: string
      mpi4py-ref:
        description: 'mpi4py ref'
        default:  ''
        required: false
        type: string
  push:
    branches:
      - ci/all
      - ci/impi
  schedule:
    - cron: '0 0 * * 6'

permissions:
  contents: read

jobs:

  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04
          - windows-2025

    steps:

    - name: Configure hostname
      run:  echo 127.0.0.1 `hostname` | sudo tee -a /etc/hosts > /dev/null
      if:   ${{ runner.os == 'Linux' || runner.os == 'macOS' }}

    - name: Install MPI
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: impi

    - name: Tweak MPI
      run:  |
        # Tweak MPI
        echo "I_MPI_SPAWN=1"               >> $GITHUB_ENV
        echo "I_MPI_SPIN_COUNT=1"          >> $GITHUB_ENV
        echo "I_MPI_THREAD_YIELD=2"        >> $GITHUB_ENV
        echo "I_MPI_COMPATIBILITY=mpi-4.1" >> $GITHUB_ENV
      shell: bash

    - name: Show MPI
      run:  echo "$I_MPI_ROOT"
      shell: bash

    - name: Show MPICC
      run:  mpicc -show

    - name: Use Python
      uses: actions/setup-python@v5
      with:
        python-version: 3
        architecture: x64

    - name: Install Python packages (build)
      run:  python -m pip install --upgrade
              setuptools pip wheel

    - name: Install Python packages (test)
      run:  python -m pip install --upgrade
              numpy cffi pyyaml

    - name: Checkout mpi4py
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.mpi4py-git || 'mpi4py/mpi4py' }}
        ref: ${{ inputs.mpi4py-ref }}

    - name: Install mpi4py
      run:  python -m pip install .
      env:
        CFLAGS: "-O0"

    - name: Check ringtest
      run:  mpiexec -n 2 python -m mpi4py.bench ringtest
      env:  {I_MPI_DEBUG: 5}

    - name: Test mpi4py (singleton)
      run:  python test/main.py -v
      if:   ${{ true }}
    - name: Test mpi4py (np=1)
      run:  mpiexec -n 1 python test/main.py -v
    - name: Test mpi4py (np=2)
      run:  mpiexec -n 2 python test/main.py -v -f
      timeout-minutes: 10
    - name: Test mpi4py (np=3)
      run:  mpiexec -n 3 python test/main.py -v -f
      timeout-minutes: 10
    - name: Test mpi4py (np=4)
      run:  mpiexec -n 4 python test/main.py -v -f
      timeout-minutes: 10
    - name: Test mpi4py (np=5)
      run:  mpiexec -n 5 python test/main.py -v -f
      if:   ${{ false }}
      timeout-minutes: 10

    - name: Test mpi4py.futures (singleton)
      run:  python demo/futures/test_futures.py -v
      if:   ${{ true }}
    - name: Test mpi4py.futures (np=1)
      run:  mpiexec -n 1 python demo/futures/test_futures.py -v
    - name: Test mpi4py.futures (np=2)
      run:  mpiexec -n 2 python demo/futures/test_futures.py -v
    - name: Test mpi4py.futures (np=3)
      run:  mpiexec -n 3 python demo/futures/test_futures.py -v

    - name: Test mpi4py.futures (np=1)
      run:  mpiexec -n 1 python -m mpi4py.futures demo/futures/test_futures.py -v
    - name: Test mpi4py.futures (np=2)
      run:  mpiexec -n 2 python -m mpi4py.futures demo/futures/test_futures.py -v
    - name: Test mpi4py.futures (np=3)
      run:  mpiexec -n 3 python -m mpi4py.futures demo/futures/test_futures.py -v

    - name: Test mpi4py.run
      run:  python demo/test-run/test_run.py -v
    - name: Test init-fini
      run:  bash demo/init-fini/run.sh
    - name: Test check-mpiexec
      run:  bash demo/check-mpiexec/run.sh
